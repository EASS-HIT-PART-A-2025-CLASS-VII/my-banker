const express = require('express');
const router = express.Router();

const analyzeReportWithLLM = require('../llmReport/llmReport');
const getWalletInformation = require('../walletInformation/walletInformation');
const getManualReport = require('../manualReports/manualReports');
const { internalErrorJsonResponse } = require('../utils/errorResponses');

/**
 * @route POST /
 * @description Generates a financial report for a given wallet address and coin type.
 *              Combines manual analysis with a summary paragraph generated by an LLM.
 * @param {string} req.body.publicKey - The wallet public address.
 * @param {string} req.body.coin - The type of cryptocurrency (e.g., 'BTC', 'ETH').
 * @returns {Object} JSON object containing both the manual report and the LLM analysis.
 */
router.post('/', async (req, res) => {
  try {
    // Extract public key and coin type from the request body
    const walletAddress = req.body.publicKey;
    const coinType = req.body.coin;

    // Fetch wallet information from external provider or service
    const walletInfo = await getWalletInformation(walletAddress, coinType);

    // Generate a manual report based on wallet activity
    const manualReport = await getManualReport(walletInfo);

    // Generate a formal LLM summary based on the manual report
    const analysis = await analyzeReportWithLLM(manualReport);

    // Combine both reports into one comprehensive response
    const fullReport = {
      manual_report: manualReport,
      analysis: analysis,
    };

    res.status(200).json(fullReport);
  } catch (error) {
    res.status(500).json(internalErrorJsonResponse('Internal server error while generating report'));
  }
});

module.exports = router;
